{"version":3,"file":"area-data.js","sources":["utils/area-data.js"],"sourcesContent":["import { regionData, codeToText } from 'element-china-area-data'\r\n\r\n// 转换数据格式\r\nconst formatData = () => {\r\n  const provinces = {}\r\n  \r\n  regionData.forEach(province => {\r\n    const provinceName = province.label\r\n    provinces[provinceName] = {\r\n      id: province.value,\r\n      cities: {}\r\n    }\r\n    \r\n    province.children.forEach(city => {\r\n      const cityName = city.label\r\n      provinces[provinceName].cities[cityName] = {\r\n        id: city.value,\r\n        districts: city.children.map(area => ({\r\n          id: area.value,\r\n          name: area.label\r\n        }))\r\n      }\r\n    })\r\n  })\r\n  \r\n  return provinces\r\n}\r\n\r\nexport const areaData = formatData()\r\n\r\n/**\r\n * 获取所有省份\r\n * @returns {Array} 省份列表\r\n */\r\nexport const getProvinces = () => {\r\n  return regionData.map(province => ({\r\n    code: province.value,\r\n    name: province.label\r\n  }))\r\n}\r\n\r\n/**\r\n * 根据省份code获取城市列表\r\n * @param {String} provinceCode 省份code\r\n * @returns {Array} 城市列表\r\n */\r\nexport const getCities = (provinceCode) => {\r\n  if (!provinceCode) return []\r\n  \r\n  // 通过省份code查找对应省份\r\n  const province = regionData.find(p => p.value === provinceCode)\r\n  if (!province || !province.children) return []\r\n  \r\n  // 返回城市列表\r\n  return province.children.map(city => ({\r\n    code: city.value,\r\n    name: city.label\r\n  }))\r\n}\r\n\r\n/**\r\n * 根据城市code获取区县列表\r\n * @param {String} cityCode 城市code\r\n * @returns {Array} 区县列表\r\n */\r\nexport const getDistricts = (cityCode) => {\r\n  if (!cityCode) return []\r\n  \r\n  // 遍历所有省份\r\n  for (const province of regionData) {\r\n    // 在省份的城市中查找\r\n    const city = province.children.find(c => c.value === cityCode)\r\n    \r\n    // 如果找到对应城市\r\n    if (city && city.children) {\r\n      // 返回区县列表\r\n      return city.children.map(district => ({\r\n        code: district.value,\r\n        name: district.label\r\n      }))\r\n    }\r\n  }\r\n  \r\n  return []\r\n}\r\n\r\n/**\r\n * 通过code获取对应的文本名称\r\n * @param {String} code 区域code\r\n * @returns {String} 区域名称\r\n */\r\nexport const getNameByCode = (code) => {\r\n  if (!code) return ''\r\n  return codeToText[code]\r\n}\r\n\r\n/**\r\n * 通过完整地址找到对应的code\r\n * @param {Object} address 包含省市区名称的对象\r\n * @returns {Object} 包含省市区code的对象\r\n */\r\nexport const getCodesByAddress = (address) => {\r\n  const { provinceName, cityName, districtName } = address\r\n  const result = {\r\n    provinceCode: '',\r\n    cityCode: '',\r\n    districtCode: ''\r\n  }\r\n  \r\n  if (!provinceName) return result\r\n  \r\n  // 查找省份\r\n  const province = regionData.find(p => p.label === provinceName)\r\n  if (!province) return result\r\n  \r\n  result.provinceCode = province.value\r\n  \r\n  if (!cityName) return result\r\n  \r\n  // 查找城市\r\n  const city = province.children.find(c => c.label === cityName)\r\n  if (!city) return result\r\n  \r\n  result.cityCode = city.value\r\n  \r\n  if (!districtName) return result\r\n  \r\n  // 查找区县\r\n  const district = city.children.find(d => d.label === districtName)\r\n  if (!district) return result\r\n  \r\n  result.districtCode = district.value\r\n  \r\n  return result\r\n}"],"names":["regionData"],"mappings":";;AAGA,MAAM,aAAa,MAAM;AACvB,QAAM,YAAY,CAAE;AAEpBA,gBAAU,EAAC,QAAQ,cAAY;AAC7B,UAAM,eAAe,SAAS;AAC9B,cAAU,YAAY,IAAI;AAAA,MACxB,IAAI,SAAS;AAAA,MACb,QAAQ,CAAE;AAAA,IACX;AAED,aAAS,SAAS,QAAQ,UAAQ;AAChC,YAAM,WAAW,KAAK;AACtB,gBAAU,YAAY,EAAE,OAAO,QAAQ,IAAI;AAAA,QACzC,IAAI,KAAK;AAAA,QACT,WAAW,KAAK,SAAS,IAAI,WAAS;AAAA,UACpC,IAAI,KAAK;AAAA,UACT,MAAM,KAAK;AAAA,QACrB,EAAU;AAAA,MACH;AAAA,IACP,CAAK;AAAA,EACL,CAAG;AAED,SAAO;AACT;AAEwB,WAAY;AAMxB,MAAC,eAAe,MAAM;AAChC,SAAOA,cAAU,EAAC,IAAI,eAAa;AAAA,IACjC,MAAM,SAAS;AAAA,IACf,MAAM,SAAS;AAAA,EACnB,EAAI;AACJ;AAOY,MAAC,YAAY,CAAC,iBAAiB;AACzC,MAAI,CAAC;AAAc,WAAO,CAAE;AAG5B,QAAM,WAAWA,cAAAA,EAAW,KAAK,OAAK,EAAE,UAAU,YAAY;AAC9D,MAAI,CAAC,YAAY,CAAC,SAAS;AAAU,WAAO,CAAE;AAG9C,SAAO,SAAS,SAAS,IAAI,WAAS;AAAA,IACpC,MAAM,KAAK;AAAA,IACX,MAAM,KAAK;AAAA,EACf,EAAI;AACJ;AAOY,MAAC,eAAe,CAAC,aAAa;AACxC,MAAI,CAAC;AAAU,WAAO,CAAE;AAGxB,aAAW,YAAYA,iBAAY;AAEjC,UAAM,OAAO,SAAS,SAAS,KAAK,OAAK,EAAE,UAAU,QAAQ;AAG7D,QAAI,QAAQ,KAAK,UAAU;AAEzB,aAAO,KAAK,SAAS,IAAI,eAAa;AAAA,QACpC,MAAM,SAAS;AAAA,QACf,MAAM,SAAS;AAAA,MACvB,EAAQ;AAAA,IACH;AAAA,EACF;AAED,SAAO,CAAE;AACX;;;;"}