{"version":3,"file":"request.js","sources":["utils/request.js"],"sourcesContent":["// 请求封装\r\nconst request = async (options = {}) => {\r\n  try {\r\n    // 调试信息\r\n    console.log('发送请求到:', options.url);\r\n    if (options.data) console.log('请求数据:', options.data);\r\n\r\n    // 获取本地存储的token和会员等级\r\n    const token = uni.getStorageSync('token');\r\n    // const memberLevel = uni.getStorageSync('memberLevel');\r\n\r\n    // 组装请求头 - 移除中文请求头\r\n    const header = {\r\n      'Content-Type': 'application/json',\r\n      'Authorization': token ? `Bearer ${token}` : '',\r\n      'X-Brand': 'NanChaBeiGuo' // 改为英文或拼音\r\n    };\r\n\r\n    const response = await uni.request({\r\n      url: options.url,\r\n      method: options.method || 'GET',\r\n      data: options.data || {},\r\n      header: { ...header, ...options.header }\r\n    });\r\n\r\n    // 添加ID转换处理\r\n    if (response.data?.data) {\r\n      response.data.data = convertIdsToString(response.data.data);\r\n    }\r\n\r\n    if (response.statusCode === 200) {\r\n      return response.data;\r\n    } else if (response.statusCode === 401) {\r\n      // token过期，跳转到登录页\r\n      uni.navigateTo({\r\n        url: '/pages/login/login'\r\n      });\r\n      throw new Error('未授权，请重新登录');\r\n    } else {\r\n      uni.showToast({\r\n        title: response.data.message || '请求失败',\r\n        icon: 'none'\r\n      });\r\n      throw new Error(response.data.message || '请求失败');\r\n    }\r\n  } catch (error) {\r\n    uni.showToast({\r\n      title: '网络错误',\r\n      icon: 'none'\r\n    });\r\n    throw error;\r\n  }\r\n};\r\n\r\n// 递归转换ID字段为字符串\r\nconst convertIdsToString = (data) => {\r\n  if (Array.isArray(data)) {\r\n    return data.map(item => convertIdsToString(item));\r\n  } else if (data && typeof data === 'object') {\r\n    return Object.entries(data).reduce((acc, [key, value]) => {\r\n      acc[key] = key.toLowerCase().endsWith('id') && typeof value === 'number' \r\n        ? value.toString() \r\n        : convertIdsToString(value);\r\n      return acc;\r\n    }, {});\r\n  }\r\n  return data;\r\n};\r\n\r\nexport default request; "],"names":["uni"],"mappings":";;AACK,MAAC,UAAU,OAAO,UAAU,OAAO;;AACtC,MAAI;AAEFA,kBAAY,MAAA,MAAA,OAAA,yBAAA,UAAU,QAAQ,GAAG;AACjC,QAAI,QAAQ;AAAMA,oBAAAA,MAAA,MAAA,OAAA,yBAAY,SAAS,QAAQ,IAAI;AAGnD,UAAM,QAAQA,cAAAA,MAAI,eAAe,OAAO;AAIxC,UAAM,SAAS;AAAA,MACb,gBAAgB;AAAA,MAChB,iBAAiB,QAAQ,UAAU,KAAK,KAAK;AAAA,MAC7C,WAAW;AAAA;AAAA,IACjB;AAEI,UAAM,WAAW,MAAMA,cAAG,MAAC,QAAQ;AAAA,MACjC,KAAK,QAAQ;AAAA,MACb,QAAQ,QAAQ,UAAU;AAAA,MAC1B,MAAM,QAAQ,QAAQ,CAAE;AAAA,MACxB,QAAQ,EAAE,GAAG,QAAQ,GAAG,QAAQ,OAAQ;AAAA,IAC9C,CAAK;AAGD,SAAI,cAAS,SAAT,mBAAe,MAAM;AACvB,eAAS,KAAK,OAAO,mBAAmB,SAAS,KAAK,IAAI;AAAA,IAC3D;AAED,QAAI,SAAS,eAAe,KAAK;AAC/B,aAAO,SAAS;AAAA,IACtB,WAAe,SAAS,eAAe,KAAK;AAEtCA,oBAAAA,MAAI,WAAW;AAAA,QACb,KAAK;AAAA,MACb,CAAO;AACD,YAAM,IAAI,MAAM,WAAW;AAAA,IACjC,OAAW;AACLA,oBAAAA,MAAI,UAAU;AAAA,QACZ,OAAO,SAAS,KAAK,WAAW;AAAA,QAChC,MAAM;AAAA,MACd,CAAO;AACD,YAAM,IAAI,MAAM,SAAS,KAAK,WAAW,MAAM;AAAA,IAChD;AAAA,EACF,SAAQ,OAAO;AACdA,kBAAAA,MAAI,UAAU;AAAA,MACZ,OAAO;AAAA,MACP,MAAM;AAAA,IACZ,CAAK;AACD,UAAM;AAAA,EACP;AACH;AAGA,MAAM,qBAAqB,CAAC,SAAS;AACnC,MAAI,MAAM,QAAQ,IAAI,GAAG;AACvB,WAAO,KAAK,IAAI,UAAQ,mBAAmB,IAAI,CAAC;AAAA,EACjD,WAAU,QAAQ,OAAO,SAAS,UAAU;AAC3C,WAAO,OAAO,QAAQ,IAAI,EAAE,OAAO,CAAC,KAAK,CAAC,KAAK,KAAK,MAAM;AACxD,UAAI,GAAG,IAAI,IAAI,YAAW,EAAG,SAAS,IAAI,KAAK,OAAO,UAAU,WAC5D,MAAM,SAAU,IAChB,mBAAmB,KAAK;AAC5B,aAAO;AAAA,IACR,GAAE,CAAE,CAAA;AAAA,EACN;AACD,SAAO;AACT;;"}